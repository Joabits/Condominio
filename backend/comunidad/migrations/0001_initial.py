# Generated by Django 5.2.6 on 2025-09-05 17:14

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Condominio',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre del Condominio')),
                ('direccion', models.TextField(verbose_name='Dirección')),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('nit', models.CharField(max_length=15, unique=True, verbose_name='NIT')),
                ('codigo_postal', models.CharField(blank=True, max_length=10, null=True)),
                ('ciudad', models.CharField(default='Santa Cruz', max_length=100)),
                ('pais', models.CharField(default='Bolivia', max_length=100)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='condominios/logos/')),
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Condominio',
                'verbose_name_plural': 'Condominios',
            },
        ),
        migrations.CreateModel(
            name='TipoUnidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('factor_costo', models.DecimalField(decimal_places=2, default=1.0, help_text='Factor multiplicador para costos', max_digits=5)),
            ],
            options={
                'verbose_name': 'Tipo de Unidad',
                'verbose_name_plural': 'Tipos de Unidades',
            },
        ),
        migrations.CreateModel(
            name='TipoUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('ADMINISTRADOR', 'Administrador'), ('PROPIETARIO', 'Propietario'), ('INQUILINO', 'Inquilino'), ('SEGURIDAD', 'Personal de Seguridad'), ('MANTENIMIENTO', 'Personal de Mantenimiento'), ('VISITANTE', 'Visitante')], max_length=15, unique=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('permisos_especiales', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': 'Tipo de Usuario',
                'verbose_name_plural': 'Tipos de Usuario',
            },
        ),
        migrations.CreateModel(
            name='CamaraSeguridad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('ubicacion', models.CharField(max_length=200)),
                ('ip_address', models.GenericIPAddressField()),
                ('puerto', models.IntegerField(default=80)),
                ('usuario_camara', models.CharField(blank=True, max_length=50, null=True)),
                ('password_camara', models.CharField(blank=True, max_length=100, null=True)),
                ('reconocimiento_facial', models.BooleanField(default=False)),
                ('deteccion_vehiculos', models.BooleanField(default=False)),
                ('deteccion_anomalias', models.BooleanField(default=False)),
                ('activa', models.BooleanField(default=True)),
                ('fecha_instalacion', models.DateTimeField(auto_now_add=True)),
                ('condominio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='camaras', to='comunidad.condominio')),
            ],
            options={
                'verbose_name': 'Cámara de Seguridad',
                'verbose_name_plural': 'Cámaras de Seguridad',
            },
        ),
        migrations.CreateModel(
            name='AreaComun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('capacidad_maxima', models.IntegerField()),
                ('precio_por_hora', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('requiere_deposito', models.BooleanField(default=False)),
                ('monto_deposito', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('hora_apertura', models.TimeField()),
                ('hora_cierre', models.TimeField()),
                ('dias_disponibles', models.JSONField(default=list, help_text='Lista de días de la semana disponibles')),
                ('equipamiento', models.TextField(blank=True, null=True)),
                ('reglas', models.TextField(blank=True, null=True)),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='areas_comunes/')),
                ('activa', models.BooleanField(default=True)),
                ('condominio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='areas_comunes', to='comunidad.condominio')),
            ],
            options={
                'verbose_name': 'Área Común',
                'verbose_name_plural': 'Áreas Comunes',
            },
        ),
        migrations.CreateModel(
            name='ConfiguracionExpensa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodo_mes', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('periodo_año', models.IntegerField(validators=[django.core.validators.MinValueValidator(2020), django.core.validators.MaxValueValidator(2050)])),
                ('monto_base_administracion', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monto_base_mantenimiento', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monto_base_seguridad', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monto_base_limpieza', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('multa_retraso_pago', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('dias_gracia', models.IntegerField(default=5, help_text='Días de gracia antes de aplicar multa')),
                ('porcentaje_mora', models.DecimalField(decimal_places=2, default=0, help_text='Porcentaje mensual de mora', max_digits=5)),
                ('fecha_vencimiento', models.DateField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('activa', models.BooleanField(default=True)),
                ('condominio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='configuraciones_expensa', to='comunidad.condominio')),
            ],
            options={
                'verbose_name': 'Configuración de Expensa',
                'verbose_name_plural': 'Configuraciones de Expensas',
                'unique_together': {('condominio', 'periodo_mes', 'periodo_año')},
            },
        ),
        migrations.CreateModel(
            name='CuotaMantenimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto_administracion', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monto_mantenimiento', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monto_seguridad', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monto_limpieza', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monto_gastos_extras', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monto_multas', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monto_mora', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monto_total', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monto_pagado', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monto_pendiente', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('PAGADA', 'Pagada'), ('VENCIDA', 'Vencida'), ('PAGADA_PARCIAL', 'Pagada Parcial'), ('CONDONADA', 'Condonada')], default='PENDIENTE', max_length=15)),
                ('fecha_vencimiento', models.DateField()),
                ('fecha_generacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_ultimo_pago', models.DateTimeField(blank=True, null=True)),
                ('riesgo_morosidad', models.DecimalField(blank=True, decimal_places=2, help_text='Porcentaje de riesgo predicho por IA', max_digits=5, null=True)),
                ('factores_riesgo', models.JSONField(blank=True, help_text='Factores considerados por IA para predicción', null=True)),
                ('configuracion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cuotas', to='comunidad.configuracionexpensa')),
            ],
            options={
                'verbose_name': 'Cuota de Mantenimiento',
                'verbose_name_plural': 'Cuotas de Mantenimiento',
                'ordering': ['-configuracion__periodo_año', '-configuracion__periodo_mes'],
            },
        ),
        migrations.CreateModel(
            name='MetodoPago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('requiere_comprobante', models.BooleanField(default=True)),
                ('activo', models.BooleanField(default=True)),
                ('es_online', models.BooleanField(default=False)),
                ('proveedor_pago', models.CharField(blank=True, max_length=50, null=True)),
                ('configuracion_api', models.JSONField(blank=True, null=True)),
                ('condominio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metodos_pago', to='comunidad.condominio')),
            ],
            options={
                'verbose_name': 'Método de Pago',
                'verbose_name_plural': 'Métodos de Pago',
            },
        ),
        migrations.CreateModel(
            name='PerfilUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ci', models.CharField(max_length=15, unique=True, verbose_name='Cédula de Identidad')),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('telefono_emergencia', models.CharField(blank=True, max_length=20, null=True)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('foto_perfil', models.ImageField(blank=True, null=True, upload_to='usuarios/fotos/')),
                ('facial_encoding', models.JSONField(blank=True, help_text='Encoding facial para IA', null=True)),
                ('facial_images', models.JSONField(blank=True, default=list, help_text='URLs de imágenes para entrenamiento')),
                ('activo', models.BooleanField(default=True)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('ultimo_acceso', models.DateTimeField(blank=True, null=True)),
                ('condominio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usuarios', to='comunidad.condominio')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil', to=settings.AUTH_USER_MODEL)),
                ('tipo_usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='comunidad.tipousuario')),
            ],
            options={
                'verbose_name': 'Perfil de Usuario',
                'verbose_name_plural': 'Perfiles de Usuario',
            },
        ),
        migrations.CreateModel(
            name='Pago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto_pagado', models.DecimalField(decimal_places=2, max_digits=10)),
                ('numero_transaccion', models.CharField(max_length=100, unique=True)),
                ('numero_comprobante', models.CharField(blank=True, max_length=50, null=True)),
                ('comprobante_imagen', models.ImageField(blank=True, null=True, upload_to='pagos/comprobantes/')),
                ('fecha_pago', models.DateTimeField()),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('PROCESANDO', 'Procesando'), ('COMPLETADO', 'Completado'), ('FALLIDO', 'Fallido'), ('REEMBOLSADO', 'Reembolsado')], default='PENDIENTE', max_length=12)),
                ('id_transaccion_externa', models.CharField(blank=True, max_length=200, null=True)),
                ('datos_pago_online', models.JSONField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('fecha_verificacion', models.DateTimeField(blank=True, null=True)),
                ('cuota', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pagos', to='comunidad.cuotamantenimiento')),
                ('metodo_pago', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='comunidad.metodopago')),
                ('registrado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='comunidad.perfilusuario')),
                ('verificado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pagos_verificados', to='comunidad.perfilusuario')),
            ],
            options={
                'verbose_name': 'Pago',
                'verbose_name_plural': 'Pagos',
                'ordering': ['-fecha_pago'],
            },
        ),
        migrations.CreateModel(
            name='AlertaSeguridad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_alerta', models.CharField(choices=[('ACCESO_NO_AUTORIZADO', 'Acceso No Autorizado'), ('PERSONA_DESCONOCIDA', 'Persona Desconocida'), ('VEHICULO_NO_AUTORIZADO', 'Vehículo No Autorizado'), ('COMPORTAMIENTO_SOSPECHOSO', 'Comportamiento Sospechoso'), ('MASCOTA_SUELTA', 'Mascota Suelta'), ('VEHICULO_MAL_ESTACIONADO', 'Vehículo Mal Estacionado'), ('OTRO', 'Otro')], max_length=25)),
                ('nivel', models.CharField(choices=[('BAJA', 'Baja'), ('MEDIA', 'Media'), ('ALTA', 'Alta'), ('CRITICA', 'Crítica')], max_length=10)),
                ('descripcion', models.TextField()),
                ('fecha_hora', models.DateTimeField(auto_now_add=True)),
                ('imagen_evidencia', models.ImageField(blank=True, null=True, upload_to='alertas/')),
                ('video_evidencia', models.FileField(blank=True, null=True, upload_to='alertas/videos/')),
                ('datos_ia', models.JSONField(blank=True, help_text='Datos adicionales del análisis de IA', null=True)),
                ('confianza_deteccion', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('revisada', models.BooleanField(default=False)),
                ('fecha_revision', models.DateTimeField(blank=True, null=True)),
                ('accion_tomada', models.TextField(blank=True, null=True)),
                ('camara', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alertas', to='comunidad.camaraseguridad')),
                ('condominio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alertas', to='comunidad.condominio')),
                ('revisada_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alertas_revisadas', to='comunidad.perfilusuario')),
            ],
            options={
                'verbose_name': 'Alerta de Seguridad',
                'verbose_name_plural': 'Alertas de Seguridad',
                'ordering': ['-fecha_hora'],
            },
        ),
        migrations.CreateModel(
            name='ReservaAreaComun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_reserva', models.DateField()),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('numero_personas', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('proposito', models.CharField(max_length=200)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('CONFIRMADA', 'Confirmada'), ('CANCELADA', 'Cancelada'), ('COMPLETADA', 'Completada')], default='PENDIENTE', max_length=12)),
                ('monto_total', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('deposito_pagado', models.BooleanField(default=False)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('area_comun', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='comunidad.areacomun')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='comunidad.perfilusuario')),
            ],
            options={
                'verbose_name': 'Reserva de Área Común',
                'verbose_name_plural': 'Reservas de Áreas Comunes',
                'ordering': ['-fecha_reserva', '-hora_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Unidad',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('numero', models.CharField(max_length=10, verbose_name='Número/Identificador')),
                ('piso', models.IntegerField(validators=[django.core.validators.MinValueValidator(-5), django.core.validators.MaxValueValidator(100)])),
                ('bloque', models.CharField(blank=True, max_length=10, null=True)),
                ('metros_cuadrados', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('dormitorios', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)])),
                ('baños', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)])),
                ('porcentaje_propiedad', models.DecimalField(decimal_places=2, help_text='Porcentaje para cálculo de gastos comunes', max_digits=5, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(100.0)])),
                ('activa', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('condominio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unidades', to='comunidad.condominio')),
                ('tipo_unidad', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='comunidad.tipounidad')),
            ],
            options={
                'verbose_name': 'Unidad',
                'verbose_name_plural': 'Unidades',
                'ordering': ['bloque', 'piso', 'numero'],
                'unique_together': {('condominio', 'numero')},
            },
        ),
        migrations.CreateModel(
            name='ResidenciaUnidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('es_propietario', models.BooleanField(default=False)),
                ('porcentaje_propiedad', models.DecimalField(decimal_places=2, default=100.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(100.0)])),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField(blank=True, null=True)),
                ('activa', models.BooleanField(default=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='residencias', to='comunidad.perfilusuario')),
                ('unidad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='residentes', to='comunidad.unidad')),
            ],
            options={
                'verbose_name': 'Residencia en Unidad',
                'verbose_name_plural': 'Residencias en Unidades',
            },
        ),
        migrations.AddField(
            model_name='cuotamantenimiento',
            name='unidad',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cuotas', to='comunidad.unidad'),
        ),
        migrations.CreateModel(
            name='Vehiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placa', models.CharField(max_length=10, unique=True)),
                ('tipo', models.CharField(choices=[('AUTO', 'Automóvil'), ('MOTO', 'Motocicleta'), ('CAMIONETA', 'Camioneta'), ('OTRO', 'Otro')], max_length=10)),
                ('marca', models.CharField(max_length=50)),
                ('modelo', models.CharField(max_length=50)),
                ('año', models.IntegerField(validators=[django.core.validators.MinValueValidator(1950), django.core.validators.MaxValueValidator(2030)])),
                ('color', models.CharField(max_length=30)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='vehiculos/')),
                ('activo', models.BooleanField(default=True)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('propietario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehiculos', to='comunidad.perfilusuario')),
            ],
            options={
                'verbose_name': 'Vehículo',
                'verbose_name_plural': 'Vehículos',
            },
        ),
        migrations.CreateModel(
            name='Visitante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('ci', models.CharField(max_length=15)),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('motivo_visita', models.CharField(max_length=200)),
                ('fecha_hora_entrada', models.DateTimeField(auto_now_add=True)),
                ('fecha_hora_salida', models.DateTimeField(blank=True, null=True)),
                ('foto_entrada', models.ImageField(blank=True, null=True, upload_to='visitantes/')),
                ('vehiculo_placa', models.CharField(blank=True, max_length=10, null=True)),
                ('facial_encoding', models.JSONField(blank=True, null=True)),
                ('activo', models.BooleanField(default=True)),
                ('autorizado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visitantes_autorizados', to='comunidad.perfilusuario')),
                ('unidad_destino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visitantes', to='comunidad.unidad')),
            ],
            options={
                'verbose_name': 'Visitante',
                'verbose_name_plural': 'Visitantes',
                'ordering': ['-fecha_hora_entrada'],
            },
        ),
        migrations.CreateModel(
            name='RegistroAcceso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_acceso', models.CharField(choices=[('ENTRADA', 'Entrada'), ('SALIDA', 'Salida')], max_length=10)),
                ('metodo_identificacion', models.CharField(choices=[('FACIAL', 'Reconocimiento Facial'), ('TARJETA', 'Tarjeta de Acceso'), ('CODIGO', 'Código de Acceso'), ('MANUAL', 'Registro Manual'), ('VEHICULAR', 'Placa Vehicular')], max_length=15)),
                ('fecha_hora', models.DateTimeField(auto_now_add=True)),
                ('foto_capturada', models.ImageField(blank=True, null=True, upload_to='accesos/')),
                ('confianza_ia', models.DecimalField(blank=True, decimal_places=2, help_text='Nivel de confianza del reconocimiento IA (0-100)', max_digits=5, null=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('autorizado', models.BooleanField(default=True)),
                ('camara', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='comunidad.camaraseguridad')),
                ('condominio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registros_acceso', to='comunidad.condominio')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accesos', to='comunidad.perfilusuario')),
                ('vehiculo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='comunidad.vehiculo')),
                ('visitante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accesos', to='comunidad.visitante')),
            ],
            options={
                'verbose_name': 'Registro de Acceso',
                'verbose_name_plural': 'Registros de Acceso',
                'ordering': ['-fecha_hora'],
            },
        ),
        migrations.CreateModel(
            name='TipoGasto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('es_fijo', models.BooleanField(default=False, help_text='Si es un gasto fijo mensual')),
                ('monto_fijo', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('activo', models.BooleanField(default=True)),
                ('condominio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tipos_gasto', to='comunidad.condominio')),
            ],
            options={
                'verbose_name': 'Tipo de Gasto',
                'verbose_name_plural': 'Tipos de Gastos',
                'unique_together': {('condominio', 'nombre')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='cuotamantenimiento',
            unique_together={('unidad', 'configuracion')},
        ),
    ]
